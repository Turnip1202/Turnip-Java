<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.turnip.turnipjava.mapper.MenusMapper">

    <resultMap id="menus" type="com.turnip.turnipjava.model.vo.MenusVO">
        <id column="id" property="id"/>
        <result column="parent_id" property="parentId"/>
        <result column="menu_type" property="menuType"/>
        <result column="name" property="name"/>
        <result column="icon" property="icon"/>
        <result column="path" property="path"/>
        <result column="sort" property="sort"/>
        <result column="permission" property="permission"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>


    <select id="getMenus" resultMap="menus">



        WITH RECURSIVE
            vars AS ( -- 先定义变量
                SELECT
                    @target_role_id := 1 AS target_role_id, -- 在此处设置目标角色ID
            (SELECT is_superadmin FROM roles WHERE id = @target_role_id) AS is_superadmin
            ),

            menu_tree AS (
        SELECT
            m.id,
            m.parent_id,
            m.menu_type,
            m.name,
            m.icon,
            m.path,
            m.sort,
            m.permission,
            m.created_at,
            m.updated_at
        FROM menus m, vars
        WHERE
            m.parent_id IS NULL
          AND (
            vars.is_superadmin = 1  -- 直接使用 vars 中的变量
           OR (
            m.permission IS NULL
           OR EXISTS (
            SELECT 1
            FROM role_permissions
            WHERE
            role_id = vars.target_role_id
          AND permission = m.permission
            )
            )
            )
          AND m.menu_type != 'button'

        UNION ALL

        SELECT
            m.id,
            m.parent_id,
            m.menu_type,
            m.name,
            m.icon,
            m.path,
            m.sort,
            m.permission,
            m.created_at,
            m.updated_at
        FROM menus m
            INNER JOIN menu_tree mt
        ON m.parent_id = mt.id, vars
        WHERE
            (
            vars.is_superadmin = 1
           OR (
            m.permission IS NULL
           OR EXISTS (
            SELECT 1
            FROM role_permissions
            WHERE
            role_id = vars.target_role_id
          AND permission = m.permission
            )
            )
            )
          AND m.menu_type != 'button'
            )

        SELECT
            id,
            parent_id,
            menu_type,
            name,
            icon,
            path,
            sort,
            permission,
            created_at,
            updated_at
        FROM menu_tree
        ORDER BY sort;


    </select>
</mapper>
